name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  #─────────────────────────────────────────────────────────────────
  lint-fmt:
  #─────────────────────────────────────────────────────────────────
    name: Format & Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      

  #─────────────────────────────────────────────────────────────────
  build-test:
  #─────────────────────────────────────────────────────────────────
    name: Build & Unit-tests
    needs: lint-fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Run tests
        run: cargo test --all --locked --verbose

  #─────────────────────────────────────────────────────────────────
  bench:
  #─────────────────────────────────────────────────────────────────
    name: Criterion Bench (CI-size)
    needs: build-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Run benchmarks
        run: cargo bench --bench order_book -- --sample-size 30 --measurement-time 5
      
      - name: Upload Criterion report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: criterion-report
          path: target/criterion
          retention-days: 7

  #─────────────────────────────────────────────────────────────────
  docs:
  #─────────────────────────────────────────────────────────────────
    name: Doc build
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Build documentation
        run: cargo doc --no-deps --document-private-items
      
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: target/doc
          retention-days: 30

  #─────────────────────────────────────────────────────────────────
  security-audit:
  #─────────────────────────────────────────────────────────────────
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        run: cargo audit

  #─────────────────────────────────────────────────────────────────
  coverage:
  #─────────────────────────────────────────────────────────────────
    name: Code Coverage
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      
      - uses: Swatinem/rust-cache@v2
      
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false